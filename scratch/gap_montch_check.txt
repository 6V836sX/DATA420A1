from pyspark.sql import functions as F

# 1) 月存在性明细（有任意一天就算该月出现）
month_presence = (
    daily_nz_tmin_tmax
    .select(
        F.col("ID"),
        F.year("DATE").alias("year"),
        F.month("DATE").alias("month")
    )
    .where(F.col("month").isNotNull())  # 保险：排除异常空月
    .distinct()
)

# 2) 对 (ID, year) 收集该年出现过的月份集合 => months_seen
by_id_year = (
    month_presence
    .groupBy("ID", "year")
    .agg(F.collect_set("month").alias("months_seen"))
)

# 3) 计算缺失月份：array_except([1..12], sort(months_seen))
all_months = F.sequence(F.lit(1), F.lit(12))
gaps_no_udf = (
    by_id_year
    .withColumn("missing_months", F.array_except(all_months, F.array_sort("months_seen")))
    .filter(F.size("missing_months") > 0)
    .select("ID", "year", "months_seen", "missing_months")
    # 排序：先 ID、年，再按“缺失月数量”，最后按缺失月份数组字典序
    .orderBy("ID", "year", F.size("missing_months"), F.col("missing_months"))
)

gaps_no_udf.show(100, truncate=False)