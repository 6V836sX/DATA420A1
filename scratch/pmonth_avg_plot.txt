# get the first day in each month
pdf["month_start"] = pd.to_datetime(
    pdf["year"].astype(str) + "-" + pdf["month"].astype(str) + "-01",
    errors="coerce" # if convertion fails, the time will be set to Nat(Not a time).
)

# Keep only the columns needed for plotting & optimize types
pdf = pdf[["ID", "month_start", "TMIN_avg", "TMAX_avg"]]
pdf["ID"] = pdf["ID"].astype("category")

# ===== 1) Alignment: reindex each station to a full monthly sequence (1940-01 ~ 2025-12) =====
# Missing months are kept as NaN so that gaps remain visible in the plots
full_index = pd.date_range("1940-01-01", "2025-12-01", freq="MS")  # Month Start

def reindex_station(g):
    g = (g.set_index("month_start")[["TMIN_avg", "TMAX_avg"]]
           .reindex(full_index))  # Fill missing months with NaN
    g.index.name = "month_start"
    return g

blocks = []
for sid, g in pdf.groupby("ID", observed=True):
    gg = reindex_station(g)
    gg["ID"] = sid
    blocks.append(gg.reset_index())

aligned = pd.concat(blocks, ignore_index=True)   # Final columns: month_start, TMIN_avg, TMAX_avg, ID
aligned = aligned[["ID", "month_start", "TMIN_avg", "TMAX_avg"]]

# ===== 2) Select 15 stations to plot (default: first 15, or replace with custom IDs) =====
ids_all = aligned["ID"].astype("category").cat.categories.tolist()
ids_15 = ids_all[:15]   # Example customization: ids_15 = ["NZ000093012", "...", ...]

# ===== 3) Create 15 subplots (each station in its own axis, plot TMIN/TMAX with same x-range) =====
import matplotlib.pyplot as plt

nrows, ncols = 3, 5
fig, axes = plt.subplots(nrows=nrows, ncols=ncols, figsize=(20, 10), sharex=False)
axes = axes.ravel()

x_min = pd.Timestamp("1940-01-01")
x_max = pd.Timestamp("2025-12-31")

for ax, sid in zip(axes, ids_15):
    g = aligned[aligned["ID"] == sid]
    ax.plot(g["month_start"], g["TMIN_avg"], label="TMIN")
    ax.plot(g["month_start"], g["TMAX_avg"], label="TMAX")
    ax.set_title(str(sid), fontsize=10)
    ax.set_xlim(x_min, x_max)
    ax.grid(True, alpha=0.3)

# Hide unused subplots (in case there are fewer than 15 stations)
for k in range(len(ids_15), len(axes)):
    axes[k].axis("off")

# Add a shared legend and overall layout adjustments
handles, labels = axes[0].get_legend_handles_labels()
fig.legend(handles, labels, loc="lower center", ncol=2)

fig.suptitle("NZ Stations • Monthly Mean TMIN/TMAX (NaN gaps, aligned 1940–2025)", 
             y=0.98, fontsize=12)
fig.tight_layout(rect=[0, 0.04, 1, 0.96])
plt.show()

# Save figure
fig.savefig("./supplementary/nz_15stations_tmin_tmax_monthly_avg.png", dpi=300)
