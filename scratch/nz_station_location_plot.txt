import geopandas as gpd
import matplotlib.pyplot as plt
import pandas as pd
import numpy as np

# === 1) Convert Spark DataFrames to pandas ===
# Station locations (ID, LATITUDE, LONGITUDE)
nz_pdf = (nz_station_loc
          .select("ID", "LATITUDE", "LONGITUDE")
          .toPandas())

# Missing stats (ID, missing_year_total, missing_month_total)
missing_pdf = daily_nz_tmin_tmax_missing_stats.toPandas()

# === 2) Merge by station ID ===
merged = pd.merge(nz_pdf, missing_pdf, on="ID", how="left")

# === 3) Create GeoDataFrame (WGS84) and reproject to NZTM2000 ===
gdf_pts = gpd.GeoDataFrame(
    merged,
    geometry=gpd.points_from_xy(merged["LONGITUDE"], merged["LATITUDE"]),
    crs="EPSG:4326"
)
gdf_pts_nztm = gdf_pts.to_crs(2193)

# === 4) Load New Zealand polygon (Natural Earth) and reproject ===
world = gpd.read_file(gpd.datasets.get_path("naturalearth_lowres"))
nz_poly = world[world["name"] == "New Zealand"].to_crs(2193)

# === 5) Figure and axes ===
fig, ax = plt.subplots(figsize=(8, 10))

# ---- 5a) Draw base map (NZ polygon) ----
nz_poly.plot(ax=ax, facecolor="#dfe8f2", edgecolor="#9fb5c8", linewidth=0.8, zorder=0)

# ---- 5b) Draw station points colored by missing_month_total ----
# Compute vmin/vmax ignoring NaNs to keep color scale stable
vals = gdf_pts_nztm["missing_month_total"].to_numpy(dtype=float)
vmin = np.nanmin(vals)
vmax = np.nanmax(vals)

gdf_pts_nztm.plot(
    ax=ax,
    column="missing_month_total",
    cmap="Reds",
    markersize=80,
    linewidth=0.4,
    edgecolor="white",
    legend=False,  # disable default legend; we will add a right-aligned colorbar
    vmin=vmin,
    vmax=vmax,
    zorder=1
)

# ---- 5c) Station labels ----
for _, r in gdf_pts_nztm.iterrows():
    if r.geometry is not None and not pd.isna(r.geometry.x):
        ax.annotate(
            r["ID"],
            xy=(r.geometry.x, r.geometry.y),
            xytext=(3, 3),
            textcoords="offset points",
            fontsize=6,
            color="#404040"
        )

# ---- 5d) Frame / extent / title ----
# Set map extent to NZ polygon bounds with a small padding
minx, miny, maxx, maxy = nz_poly.total_bounds
pad_x = (maxx - minx) * 0.05
pad_y = (maxy - miny) * 0.05
ax.set_xlim(minx - pad_x, maxx + pad_x)
ax.set_ylim(miny - pad_y, maxy + pad_y)

ax.set_title("NZ Weather Stations: Missing Months (darker = more missing)", fontsize=12)
ax.set_axis_off()

# === 6) Create a separate colorbar axis at the far right ===
# [left, bottom, width, height] in figure coordinates
# Increase 'left' to push further right; adjust 'width' for thicker/thinner bar.
cax = fig.add_axes([0.92, 0.15, 0.02, 0.7])  # right-aligned standalone colorbar

# Build scalar mappable matching the point layer
sm = plt.cm.ScalarMappable(
    cmap="Reds",
    norm=plt.Normalize(vmin=vmin, vmax=vmax)
)
sm._A = []  # compatibility for older Matplotlib

cbar = fig.colorbar(sm, cax=cax)
cbar.set_label("Missing Months", fontsize=10)

plt.show()