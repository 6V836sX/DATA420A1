# ============================================
# Bubble map: PRCP stations per country
# (Spark aggregates → 218 rows → Pandas → plot)
# ============================================

import math
import pandas as pd
import geopandas as gpd
import matplotlib.pyplot as plt
from pyspark.sql import functions as F

# 1) Spark：国家级聚合（每站只计一次，计算数量与国家“代表点”）
country_agg = (
    prcp_stations
    .select("ID", "COUNTRY_CODE", "LATITUDE", "LONGITUDE")
    .dropna()
    .filter((F.col("LATITUDE").between(-90, 90)) & (F.col("LONGITUDE").between(-180, 180)))
    .dropDuplicates(["ID"])  # 避免同一站多次计入
    .groupBy("COUNTRY_CODE")
    .agg(
        F.count("*").alias("station_count"),
        F.avg("LATITUDE").alias("avg_lat"),
        F.avg("LONGITUDE").alias("avg_lon"),
    )
)

# 2) 收集到 Pandas（只有 ~218 行）
bubble_df = country_agg.toPandas()

# 3) 世界底图（WGS84）
world = gpd.read_file(gpd.datasets.get_path("naturalearth_lowres")).to_crs(4326)

# 4) 把国家代表点做成 GeoDataFrame（WGS84）
bubbles = gpd.GeoDataFrame(
    bubble_df,
    geometry=gpd.points_from_xy(bubble_df["avg_lon"], bubble_df["avg_lat"]),
    crs="EPSG:4326"
)

# 5) 可选：投影到 Robinson（观感更好）；失败则保持 4326
target_crs = "ESRI:54030"
try:
    world_proj = world.to_crs(target_crs)
    bubbles_proj = bubbles.to_crs(target_crs)
except Exception:
    target_crs = "EPSG:4326"
    world_proj = world
    bubbles_proj = bubbles

# 6) 气泡大小（按平方根缩放，保证视觉面积接近线性）
c = bubbles_proj["station_count"].astype(float)
c_min, c_max = float(c.min()), float(c.max())
# 你可以调 min/max_size 来控制视觉效果
min_size, max_size = 10, 800  # matplotlib scatter 的 s 是面积像素
if c_max > 0:
    s = min_size + (max_size - min_size) * (c.pow(0.5) - math.sqrt(max(1.0, c_min))) / (math.sqrt(c_max) - math.sqrt(max(1.0, c_min)))
    s = s.clip(lower=min_size)
else:
    s = pd.Series([min_size] * len(c))

# 7) 绘图
fig, ax = plt.subplots(figsize=(16, 8))
world_proj.plot(ax=ax, color="#eef2f6", edgecolor="#c9d1da", linewidth=0.5, zorder=0)

# 国家代表点（按站点数大小）
bubbles_proj.plot(
    ax=ax,
    markersize=s,     # 比例符号
    alpha=0.65,
    color="#1f77b4",
    edgecolor="white",
    linewidth=0.3,
    zorder=2,
)

ax.set_axis_off()
ax.set_title(
    f"Global PRCP Stations by Country (bubble size ∝ station count)\nCRS: {target_crs}",
    fontsize=13
)

# 8) 自定义气泡图例（计算 5 个分级刻度（对数刻度更均匀））
legend_vals = [50, 200, 1_000, 5_000, int(c_max)]

for legend_val in legend_vals:
    if legend_val <= 0 or legend_val > c_max:
        continue
    # 用同样的缩放公式计算面积
    area = min_size + (max_size - min_size) * (
        (math.sqrt(legend_val) - math.sqrt(max(1.0, c_min)))
        / (math.sqrt(c_max) - math.sqrt(max(1.0, c_min)))
    )
    plt.scatter([], [], s=area, color="#1f77b4", alpha=0.65,
                edgecolors="white", linewidths=0.3, label=f"{legend_val:,}")

leg = ax.legend(
    scatterpoints=1,
    frameon=True,
    labelspacing=1.2,
    title="Stations",
    loc="lower left",
    bbox_to_anchor=(0.02, 0.02),
)
leg.get_title().set_fontsize(10)

plt.tight_layout()
plt.savefig("./supplementary/global_prcp_stations_bubble.png", dpi=300, bbox_inches="tight")
plt.show()

# 9) 导出聚合表
out_csv = "./supplementary/prcp_station_country_bubbles.csv"
bubbles[["COUNTRY_CODE", "station_count", "avg_lat", "avg_lon"]].to_csv(out_csv, index=False)
print("Saved:", out_csv)